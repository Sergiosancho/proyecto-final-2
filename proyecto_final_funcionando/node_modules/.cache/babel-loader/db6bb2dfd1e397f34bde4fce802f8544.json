{"ast":null,"code":"var _jsxFileName = \"/Users/sergio/Desktop/development/proyecto_final_funcionando/src/Coin.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport './Coin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Coin = _ref => {\n  _s();\n\n  let {\n    name,\n    price,\n    symbol,\n    marketcap,\n    volume,\n    image,\n    priceChange,\n    sparkLine\n  } = _ref;\n  const [data, setData] = React.useState({\n    labels: sparkLine.map(item => item),\n    datasets: [{\n      label: '',\n      data: sparkLine,\n      borderColor: 'rgba(255, 99, 132, 1)',\n      borderWidth: 1,\n      fill: false,\n      lineTension: 0,\n      pointRadius: 0,\n      pointHitRadius: 0\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crypto-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crypto-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crypto\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: \"crypto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"crypto-symbol\",\n            children: [symbol, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crypto-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"crypto-price\",\n            children: [price, \"\\u20AC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"crypto-volume\",\n            children: [volume.toLocaleString(), \"\\u20AC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), priceChange < 0 ?\n          /*#__PURE__*/\n          //El método toFixed() formatea un número usando notación de punto fijo\n          _jsxDEV(\"p\", {\n            className: \"crypto-percent red\",\n            children: [priceChange.toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"crypto-percent green\",\n            children: [priceChange.toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"crypto-marketcap\",\n            children: [\"Mkt Cap: \", marketcap.toLocaleString(), \"\\u20AC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crypto-graph\",\n          children: /*#__PURE__*/_jsxDEV(Line //renderizas el gráfico pasándole las opciones que te interesan de entre todas las disponibles\n          , {\n            type: \"line\",\n            data: data,\n            options: {\n              responsive: true,\n              borderColor: 'rgba(2, 99, 132, 1)',\n              plugins: {\n                title: {\n                  display: false\n                },\n                legend: {\n                  display: false\n                }\n              },\n              scales: {\n                x: {\n                  display: false\n                },\n                y: {\n                  display: false\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Coin, \"1plpE8ex1NCui12xP7ENT6UlOJA=\");\n\n_c = Coin;\nexport default Coin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Coin\");","map":{"version":3,"names":["React","Line","Coin","name","price","symbol","marketcap","volume","image","priceChange","sparkLine","data","setData","useState","labels","map","item","datasets","label","borderColor","borderWidth","fill","lineTension","pointRadius","pointHitRadius","toLocaleString","toFixed","responsive","plugins","title","display","legend","scales","x","y"],"sources":["/Users/sergio/Desktop/development/proyecto_final_funcionando/src/Coin.js"],"sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nimport './Coin.css';\n\nconst Coin = ({\n  name,\n  price,\n  symbol,\n  marketcap,\n  volume,\n  image,\n  priceChange,\n  sparkLine,\n}) => {\n  const [data, setData] = React.useState({\n    labels: sparkLine.map((item) => item),\n    datasets: [\n      {\n        label: '',\n        data: sparkLine,\n        borderColor: 'rgba(255, 99, 132, 1)',\n        borderWidth: 1,\n        fill: false,\n        lineTension: 0,\n        pointRadius: 0,\n        pointHitRadius: 0,\n      },\n    ],\n  });\n\n  return (\n    <>\n      <div className=\"crypto-container\">\n        <div className=\"crypto-row\">\n          <div className=\"crypto\">\n            <img src={image} alt=\"crypto\" />\n            <h1>{name}</h1>\n            <p className=\"crypto-symbol\">{symbol} </p>\n          </div>\n          <div className=\"crypto-data\">\n            <p className=\"crypto-price\">{price}€</p>\n\n            <p className=\"crypto-volume\">{volume.toLocaleString()}€</p>\n\n            {priceChange < 0 ? (\n              //El método toFixed() formatea un número usando notación de punto fijo\n              <p className=\"crypto-percent red\">{priceChange.toFixed(2)}%</p>\n            ) : (\n              <p className=\"crypto-percent green\">{priceChange.toFixed(2)}%</p>\n            )}\n            <p className=\"crypto-marketcap\">\n              Mkt Cap: {marketcap.toLocaleString()}€\n            </p>\n          </div>\n          <div className=\"crypto-graph\">\n            <Line\n              //renderizas el gráfico pasándole las opciones que te interesan de entre todas las disponibles\n              type=\"line\"\n              data={data}\n              options={{\n                responsive: true,\n                borderColor: 'rgba(2, 99, 132, 1)',\n                plugins: {\n                  title: {\n                    display: false,\n                  },\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Coin;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEA,OAAO,YAAP;;;;AAEA,MAAMC,IAAI,GAAG,QASP;EAAA;;EAAA,IATQ;IACZC,IADY;IAEZC,KAFY;IAGZC,MAHY;IAIZC,SAJY;IAKZC,MALY;IAMZC,KANY;IAOZC,WAPY;IAQZC;EARY,CASR;EACJ,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,KAAK,CAACa,QAAN,CAAe;IACrCC,MAAM,EAAEJ,SAAS,CAACK,GAAV,CAAeC,IAAD,IAAUA,IAAxB,CAD6B;IAErCC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,EADT;MAEEP,IAAI,EAAED,SAFR;MAGES,WAAW,EAAE,uBAHf;MAIEC,WAAW,EAAE,CAJf;MAKEC,IAAI,EAAE,KALR;MAMEC,WAAW,EAAE,CANf;MAOEC,WAAW,EAAE,CAPf;MAQEC,cAAc,EAAE;IARlB,CADQ;EAF2B,CAAf,CAAxB;EAgBA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,kBAAf;MAAA,uBACE;QAAK,SAAS,EAAC,YAAf;QAAA,wBACE;UAAK,SAAS,EAAC,QAAf;UAAA,wBACE;YAAK,GAAG,EAAEhB,KAAV;YAAiB,GAAG,EAAC;UAArB;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA,UAAKL;UAAL;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAG,SAAS,EAAC,eAAb;YAAA,WAA8BE,MAA9B;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAME;UAAK,SAAS,EAAC,aAAf;UAAA,wBACE;YAAG,SAAS,EAAC,cAAb;YAAA,WAA6BD,KAA7B;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAGE;YAAG,SAAS,EAAC,eAAb;YAAA,WAA8BG,MAAM,CAACkB,cAAP,EAA9B;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF,EAKGhB,WAAW,GAAG,CAAd;UAAA;UACC;UACA;YAAG,SAAS,EAAC,oBAAb;YAAA,WAAmCA,WAAW,CAACiB,OAAZ,CAAoB,CAApB,CAAnC;UAAA;YAAA;YAAA;YAAA;UAAA,QAFD,gBAIC;YAAG,SAAS,EAAC,sBAAb;YAAA,WAAqCjB,WAAW,CAACiB,OAAZ,CAAoB,CAApB,CAArC;UAAA;YAAA;YAAA;YAAA;UAAA,QATJ,eAWE;YAAG,SAAS,EAAC,kBAAb;YAAA,wBACYpB,SAAS,CAACmB,cAAV,EADZ;UAAA;YAAA;YAAA;YAAA;UAAA,QAXF;QAAA;UAAA;UAAA;UAAA;QAAA,QANF,eAqBE;UAAK,SAAS,EAAC,cAAf;UAAA,uBACE,QAAC,IAAD,CACE;UADF;YAEE,IAAI,EAAC,MAFP;YAGE,IAAI,EAAEd,IAHR;YAIE,OAAO,EAAE;cACPgB,UAAU,EAAE,IADL;cAEPR,WAAW,EAAE,qBAFN;cAGPS,OAAO,EAAE;gBACPC,KAAK,EAAE;kBACLC,OAAO,EAAE;gBADJ,CADA;gBAIPC,MAAM,EAAE;kBACND,OAAO,EAAE;gBADH;cAJD,CAHF;cAWPE,MAAM,EAAE;gBACNC,CAAC,EAAE;kBACDH,OAAO,EAAE;gBADR,CADG;gBAINI,CAAC,EAAE;kBACDJ,OAAO,EAAE;gBADR;cAJG;YAXD;UAJX;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QArBF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAuDD,CAjFD;;GAAM5B,I;;KAAAA,I;AAmFN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}