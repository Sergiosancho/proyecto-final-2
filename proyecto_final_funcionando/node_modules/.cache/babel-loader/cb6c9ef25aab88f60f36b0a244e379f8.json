{"ast":null,"code":"var _jsxFileName = \"/Users/sergio/Desktop/development/proyecto_final_funcionando/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Router, Route, Switch, link } from 'react-router-dom ';\nimport NewsFeed from '../components/NewsFeed';\nimport { Chart, ArcElement, LineElement, BarElement, PointElement, BarController, BubbleController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, ScatterController, CategoryScale, LinearScale, LogarithmicScale, RadialLinearScale, TimeScale, TimeSeriesScale, Decimation, Filler, Legend, Title, Tooltip, SubTitle } from 'chart.js';\nimport './App.css';\nimport Coin from '../Coin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChart.register(ArcElement, LineElement, BarElement, PointElement, BarController, BubbleController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, ScatterController, CategoryScale, LinearScale, LogarithmicScale, RadialLinearScale, TimeScale, TimeSeriesScale, Decimation, Filler, Legend, Title, Tooltip, SubTitle); //import Cards from './components/Cards';\n//import { coinData } from './data';\n//import { Sparklines, SparklinesLine } from 'react-sparklines';\n\n/*populate the labels and data arrays with data from the API. To achieve this,  use the map method to create an array of the values gotten from the API:*/\n\nfunction App() {\n  _s();\n\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState(''); //const [coinData, setCoinData] = useState({\n  // chart.js requiere los datos de una forma concreta\n  //labels: [], //por ejemplo a침os\n  //datasets: [],\n  //});\n  // const url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=30&page=1&sparkline=false';\n\n  const url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=30&page=1&sparkline=true';\n  /*const chartUrl =\n    'https://api.coingecko.com/api/v3/exchanges/binance/volume_chart?days=1';*/\n\n  useEffect(() => {\n    axios.get(url).then(res => {\n      //establece en coins el resultado de la respuesta ,coins va a tener ese array\n      setCoins(res.data);\n    }).catch(error => console.log(error)); //setCoinData();\n    //SparklinesLine();\n  }, []);\n\n  const handleChange = e => {\n    setSearch(e.target.value);\n  }; //funci칩n que filtra los datos\n\n\n  const filteredCoins = coins.filter(coin => //para que escrito de cualquier forma coincida\n  coin.name.toLowerCase().includes(search.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crypto-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crypto-search\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"crypto-text\",\n          children: \"Filtrar criptomoneda\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"crypto-input\",\n            type: \"text\",\n            onChange: handleChange,\n            placeholder: \"filtrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), filteredCoins.map(coin => {\n        return /*#__PURE__*/_jsxDEV(Coin, {\n          name: coin.name,\n          price: coin.current_price,\n          symbol: coin.symbol,\n          marketcap: coin.total_volume,\n          volume: coin.market_cap,\n          image: coin.image,\n          priceChange: coin.price_change_percentage_24h,\n          sparkLine: coin.sparkline_in_7d.price\n        }, coin.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewsFeed, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"RP/vHIb1hIGkJRpJzwuYjErexok=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Router","Route","Switch","link","NewsFeed","Chart","ArcElement","LineElement","BarElement","PointElement","BarController","BubbleController","DoughnutController","LineController","PieController","PolarAreaController","RadarController","ScatterController","CategoryScale","LinearScale","LogarithmicScale","RadialLinearScale","TimeScale","TimeSeriesScale","Decimation","Filler","Legend","Title","Tooltip","SubTitle","Coin","register","App","coins","setCoins","search","setSearch","url","get","then","res","data","catch","error","console","log","handleChange","e","target","value","filteredCoins","filter","coin","name","toLowerCase","includes","map","current_price","symbol","total_volume","market_cap","image","price_change_percentage_24h","sparkline_in_7d","price","id"],"sources":["/Users/sergio/Desktop/development/proyecto_final_funcionando/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Router, Route, Switch, link } from 'react-router-dom ';\nimport NewsFeed from '../components/NewsFeed';\nimport {\n  Chart,\n  ArcElement,\n  LineElement,\n  BarElement,\n  PointElement,\n  BarController,\n  BubbleController,\n  DoughnutController,\n  LineController,\n  PieController,\n  PolarAreaController,\n  RadarController,\n  ScatterController,\n  CategoryScale,\n  LinearScale,\n  LogarithmicScale,\n  RadialLinearScale,\n  TimeScale,\n  TimeSeriesScale,\n  Decimation,\n  Filler,\n  Legend,\n  Title,\n  Tooltip,\n  SubTitle,\n} from 'chart.js';\n\nimport './App.css';\nimport Coin from '../Coin';\n\nChart.register(\n  ArcElement,\n  LineElement,\n  BarElement,\n  PointElement,\n  BarController,\n  BubbleController,\n  DoughnutController,\n  LineController,\n  PieController,\n  PolarAreaController,\n  RadarController,\n  ScatterController,\n  CategoryScale,\n  LinearScale,\n  LogarithmicScale,\n  RadialLinearScale,\n  TimeScale,\n  TimeSeriesScale,\n  Decimation,\n  Filler,\n  Legend,\n  Title,\n  Tooltip,\n  SubTitle,\n);\n//import Cards from './components/Cards';\n//import { coinData } from './data';\n//import { Sparklines, SparklinesLine } from 'react-sparklines';\n\n/*populate the labels and data arrays with data from the API. To achieve this,  use the map method to create an array of the values gotten from the API:*/\n\nfunction App() {\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState('');\n  //const [coinData, setCoinData] = useState({\n  // chart.js requiere los datos de una forma concreta\n  //labels: [], //por ejemplo a침os\n  //datasets: [],\n  //});\n  // const url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=30&page=1&sparkline=false';\n  const url =\n    'https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=30&page=1&sparkline=true';\n\n  /*const chartUrl =\n    'https://api.coingecko.com/api/v3/exchanges/binance/volume_chart?days=1';*/\n\n  useEffect(() => {\n    axios\n      .get(url)\n      .then((res) => {\n        //establece en coins el resultado de la respuesta ,coins va a tener ese array\n        setCoins(res.data);\n      })\n      .catch((error) => console.log(error));\n    //setCoinData();\n    //SparklinesLine();\n  }, []);\n\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n  //funci칩n que filtra los datos\n  const filteredCoins = coins.filter((coin) =>\n    //para que escrito de cualquier forma coincida\n    coin.name.toLowerCase().includes(search.toLowerCase()),\n  );\n\n  return (\n    <>\n      <div className=\"crypto-app\">\n        <div className=\"crypto-search\">\n          <h1 className=\"crypto-text\">Filtrar criptomoneda</h1>\n\n          <form>\n            <input\n              className=\"crypto-input\"\n              type=\"text\"\n              onChange={handleChange}\n              placeholder=\"filtrar\"\n            />\n          </form>\n        </div>\n        {filteredCoins.map((coin) => {\n          return (\n            <Coin\n              key={coin.id}\n              name={coin.name}\n              price={coin.current_price}\n              symbol={coin.symbol}\n              marketcap={coin.total_volume}\n              volume={coin.market_cap}\n              image={coin.image}\n              priceChange={coin.price_change_percentage_24h}\n              sparkLine={coin.sparkline_in_7d.price}\n            />\n          );\n        })}\n      </div>\n      <NewsFeed />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}